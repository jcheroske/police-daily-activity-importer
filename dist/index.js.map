{"version":3,"sources":["webpack:///webpack/bootstrap 4ffd485cdc5a193aeb70","webpack:///./src/log.js","webpack:///external \"envalid\"","webpack:///external \"lodash\"","webpack:///external \"moment-timezone\"","webpack:///./src/database.js","webpack:///./src/maps.js","webpack:///./src/scraper.js","webpack:///external \"bluebird\"","webpack:///./src/index.js","webpack:///external \"@google/maps\"","webpack:///external \"apollo-client\"","webpack:///external \"es6-error\"","webpack:///external \"graphql-tag\"","webpack:///external \"isomorphic-fetch\"","webpack:///external \"request-x-ray\"","webpack:///external \"winston\"","webpack:///external \"winston-papertrail\"","webpack:///external \"x-ray\""],"names":["LOG_LEVELS","env","cleanEnv","process","PAPERTRAIL_LOG_LEVEL","desc","choices","devDefault","PAPERTRAIL_HOST","PAPERTRAIL_PORT","PAPERTRAIL_CLIENT_NAME","CONSOLE_LOG_LEVEL","consoleTransport","transports","Console","level","colorize","stderrLevels","papertrailTransport","host","port","hostname","logFormat","message","Logger","levels","error","warn","info","verbose","debug","result","client","query","fetchPolicy","data","allConfigs","id","Error","configId","getConfigId","name","Config","getConfigParam","value","mutate","mutation","updateConfig","undefined","setConfigParam","startDay","endDay","scraped","imported","alreadyExists","noLocation","toISOString","createImporterLog","logImport","incident","caseNumber","description","offense","reportedAt","streetAddress","zipCode","lat","lng","createIncident","returnValue","Incident","isIncidentUnsaved","allIncidentsResult","allIncidents","deleteIncidentResult","deleteIncident","deleteAllIncidents","GRAPHCOOL_AUTHENTICATION_TOKEN","GRAPH_QL_ENDPOINT","networkInterface","uri","use","applyMiddleware","req","next","options","headers","authorization","database","Object","freeze","init","rawAddress","join","response","googleGeocode","address","err","QueryLimitExceeded","json","status","results","formatted_address","formattedAddress","geometry","location","streetAddressRegExResult","split","trim","zipCodeRegExResult","match","addLocationInfoToIncident","GOOGLE_MAPS_API_KEY","createClient","key","timeout","Promise","promisify","geocode","maps","constructor","date","method","form","btnGo","RequestType","getFormDateFields","getFormSecurityFields","xRay","filters","parseDate","parseAddress","parseDescription","driver","selector","incidents","fromCallback","POLICE_INCIDENT_URL","cb","length","scrape","securityFields","scraper","startMoment","endMoment","ddlFromMonth","month","ddlFromDate","ddlFromYear","year","ddlToMonth","ddlToDate","ddlToYear","defaultDate","tz","replace","re","exec","totalStats","lastImportDateStr","dateToImport","add","isBefore","dayStats","scrapedIncidents","scrapedIncident","incidentWithLocation","format","DATE_FORMAT","prop","importIncidents"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4ffd485cdc5a193aeb70","import envalid, {num, str} from 'envalid'\nimport winston from 'winston'\nimport { Papertrail } from 'winston-papertrail'\n\nconst LOG_LEVELS = ['debug', 'verbose', 'info', 'warn', 'error']\n\nconst env = envalid.cleanEnv(process.env, {\n  PAPERTRAIL_LOG_LEVEL: str({ desc: `Papertrail log level (${LOG_LEVELS})`, choices: LOG_LEVELS, devDefault: 'debug' }),\n  PAPERTRAIL_HOST: str({ desc: 'Papertrail hostname' }),\n  PAPERTRAIL_PORT: num({ desc: 'Papertrail port number' }),\n  PAPERTRAIL_CLIENT_NAME: str({ desc: 'Papertrail client name' }),\n\n  CONSOLE_LOG_LEVEL: str({ desc: `Console log level (${LOG_LEVELS})`, choices: LOG_LEVELS, devDefault: 'debug' })\n})\n\nconst consoleTransport = new winston.transports.Console({\n  level: env.CONSOLE_LOG_LEVEL,\n  colorize: true,\n  stderrLevels: ['error']\n})\n\nconst papertrailTransport = new Papertrail({\n  level: env.PAPERTRAIL_LOG_LEVEL,\n  host: env.PAPERTRAIL_HOST,\n  port: env.PAPERTRAIL_PORT,\n  hostname: env.PAPERTRAIL_CLIENT_NAME,\n  colorize: true,\n  logFormat (level, message) {\n    return '[' + level + '] ' + message;\n  }\n})\n\nexport default new winston.Logger({\n  levels: { error: 0, warn: 1, info: 2, verbose: 3, debug: 4 },\n  transports: [\n    papertrailTransport,\n    consoleTransport\n  ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/log.js","module.exports = require(\"envalid\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"envalid\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"moment-timezone\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment-timezone\"\n// module id = 3\n// module chunks = 0","import ApolloClient, { createNetworkInterface } from 'apollo-client'\nimport envalid, {str} from 'envalid'\nimport gql from 'graphql-tag'\nimport 'isomorphic-fetch'\nimport log from './log'\n\nlet client, configId\n\nasync function getConfigId () {\n  const result = await client.query({\n    fetchPolicy: 'network-only',\n    query: gql`\n      query {\n        allConfigs {\n          id\n        }  \n      }\n    `\n  })\n\n  if (!result || !result.data || !result.data.allConfigs || !result.data.allConfigs[0] || !result.data.allConfigs[0].id) {\n    log.error('Database: getConfigId(): malformed GraphQL result', result)\n    throw new Error('Database: getConfigId(): malformed GraphQL result')\n  }\n  configId = result.data.allConfigs[0].id\n}\n\nasync function getConfigParam (name) {\n  const result = await client.query({\n    fetchPolicy: 'network-only',\n    query: gql`\n      query {\n        Config(id: \"${configId}\") {\n          ${name}\n        }  \n      }\n    `\n  })\n\n  if (!result || !result.data || !result.data.Config || !result.data.Config[name]) {\n    log.error('Database: getConfigParam(): malformed GraphQL result', name, result)\n    throw new Error('Database: getConfigParam(): malformed GraphQL result')\n  }\n\n  return result.data.Config[name]\n}\n\nasync function setConfigParam (name, value) {\n  const result = await client.mutate({\n    mutation: gql`\n      mutation {\n        updateConfig (\n          id: \"${configId}\",\n          ${name}: \"${value}\"\n        ) {\n          id\n        }\n      }\n    `\n  })\n\n  if (!result || !result.data || !result.data.updateConfig) {\n    log.error('Database: setConfigParam(): malformed GraphQL result', name, value, result)\n    throw new Error('Database: setConfigParam(): malformed GraphQL result')\n  }\n\n  return undefined\n}\n\nasync function logImport ({startDay, endDay, scraped, imported, alreadyExists, noLocation}) {\n  const result = await client.mutate({\n    mutation: gql`\n      mutation {\n        createImporterLog(\n          startDay: \"${startDay.toISOString()}\"\n          endDay: \"${endDay.toISOString()}\"\n          scraped: ${scraped}\n          imported: ${imported}\n          alreadyExists: ${alreadyExists}\n          noLocation: ${noLocation}\n        ) {\n          id\n        }\n      }\n    `\n  })\n\n  if (!result || !result.data || !result.data.createImporterLog) {\n    log.error('Database: logImport(): malformed GraphQL result', result)\n    throw new Error('Database: logImport(): malformed GraphQL result')\n  }\n\n  return result.data.createImporterLog\n}\n\nasync function createIncident (incident) {\n  log.debug('Creating new Incident', incident)\n  const result = await client.mutate({\n    mutation: gql`\n      mutation {\n        createIncident(\n          caseNumber: \"${incident.caseNumber}\"\n          description: \"${incident.description}\"\n          offense: \"${incident.offense}\"\n          reportedAt: \"${incident.reportedAt}\"\n          streetAddress: \"${incident.streetAddress}\"\n          zipCode: \"${incident.zipCode}\"\n          lat: ${incident.lat}\n          lng: ${incident.lng}\n        ) {\n          id\n        }\n      }\n    `\n  })\n\n  if (!result || !result.data || !result.data.createIncident) {\n    log.error('Database: createIncident(): malformed GraphQL result', incident, result)\n    throw new Error('Database: createIncident(): malformed GraphQL result')\n  }\n\n  log.debug('Database: created new incident', incident.caseNumber)\n  return result.data.createIncident\n}\n\nasync function isIncidentUnsaved (incident) {\n  const result = await client.query({\n    fetchPolicy: 'network-only',\n    query: gql`\n      query {\n        Incident(caseNumber: \"${incident.caseNumber}\") {\n          id\n        }  \n      }\n    `\n  })\n\n  if (!result || !result.data) {\n    log.error('Database: isIncidentUnsaved(): malformed GraphQL result', incident, result)\n    throw new Error('Database: isIncidentUnsaved(): malformed GraphQL result')\n  }\n\n  const returnValue = result.data.Incident == null\n  log.debug(`Database: case number ${incident.caseNumber} ${returnValue ? 'does not exist' : 'already exists'} in the database`)\n  return returnValue\n}\n\nasync function deleteAllIncidents () {\n  const allIncidentsResult = await client.query({\n    fetchPolicy: 'network-only',\n    query: gql`\n      query {\n        allIncidents {\n          id\n        }\n      }\n    `\n  })\n\n  if (!allIncidentsResult || !allIncidentsResult.data || !allIncidentsResult.data.allIncidents) {\n    log.error('Database: deleteAllIncidents(): malformed GraphQL result', allIncidentsResult)\n    throw new Error('Database: deleteAllIncidents(): malformed GraphQL result')\n  }\n\n  for (const incident of allIncidentsResult.data.allIncidents) {\n    const deleteIncidentResult = await client.mutate({\n      mutation: gql`\n        mutation {\n          deleteIncident(\n            id: \"${incident.id}\"\n          ) {\n            id\n          }\n        }\n      `\n    })\n\n    if (!deleteIncidentResult || !deleteIncidentResult.data || !deleteIncidentResult.data.deleteIncident) {\n      log.error('Database: deleteAllIncidents(): malformed GraphQL result', deleteIncidentResult)\n      throw new Error('Database: deleteAllIncidents(): malformed GraphQL result')\n    }\n\n    log.debug(`Database: incident ${incident.id} deleted`)\n  }\n}\n\nlet database\n\nexport async function init () {\n  const env = envalid.cleanEnv(process.env, {\n    GRAPHCOOL_AUTHENTICATION_TOKEN: str({desc: 'Graphcool Authentication Token'}),\n    GRAPH_QL_ENDPOINT: str({desc: 'GraphQL endpoint URL'})\n  })\n\n  const networkInterface = createNetworkInterface({\n    uri: env.GRAPH_QL_ENDPOINT\n  })\n\n  networkInterface.use([{\n    applyMiddleware (req, next) {\n      if (!req.options.headers) {\n        req.options.headers = {}\n      }\n\n      req.options.headers.authorization = `Bearer ${env.GRAPHCOOL_AUTHENTICATION_TOKEN}`\n      next()\n    }\n  }])\n\n  client = new ApolloClient({networkInterface})\n\n  await getConfigId()\n\n  database = Object.freeze({\n    getConfigParam,\n    setConfigParam,\n    logImport,\n    createIncident,\n    isIncidentUnsaved,\n    deleteAllIncidents\n  })\n  log.verbose('Database: initialized')\n}\n\nexport default () => database\n\n\n\n// WEBPACK FOOTER //\n// ./src/database.js","import GoogleMaps from '@google/maps'\nimport envalid, {str} from 'envalid'\nimport ExtendableError from 'es6-error'\nimport log from './log'\n\nexport class QueryLimitExceeded extends ExtendableError {\n  constructor () {\n    super('Google maps API query limit exceeded')\n  }\n}\n\nlet googleGeocode\n\nasync function addLocationInfoToIncident (incident) {\n  const rawAddress = [incident.streetAddress, 'Bellingham', 'WA'].join(', ')\n  log.debug(`Maps: about to geocode ${rawAddress}`)\n\n  let response\n  try {\n    response = await googleGeocode({address: rawAddress})\n  } catch (err) {\n    if (err.message === 'timeout') {\n      throw new QueryLimitExceeded()\n    }\n    log.error('Maps: error when invoking Google maps API', err)\n    throw err\n  }\n\n  if (!response || !response.json) {\n    log.warn('Maps: empty response or json payload', response)\n    return undefined\n  }\n\n  const {status, results} = response.json\n\n  if (response.json.status === 'OVER_QUERY_LIMIT') {\n    log.warn('Maps: Query limit exceeded')\n    throw new QueryLimitExceeded()\n  }\n\n  if (status !== 'OK') {\n    log.warn('Maps: Non-OK status received', rawAddress, status)\n    return undefined\n  }\n\n  if (!results || !results[0]) {\n    log.warn('Maps: missing results payload', rawAddress, results)\n    return undefined\n  }\n\n  const {formatted_address: formattedAddress, geometry} = results[0]\n\n  if (!formattedAddress) {\n    log.warn('Maps: missing formatted address', rawAddress, results[0])\n    return undefined\n  }\n\n  if (!geometry || !geometry.location || !geometry.location.lat || !geometry.location.lng) {\n    log.warn('Maps: missing or incomplete geometry object', rawAddress, results[0])\n    return undefined\n  }\n\n  const streetAddressRegExResult = formattedAddress.split(',')\n  if (!streetAddressRegExResult || !streetAddressRegExResult[0]) {\n    log.warn('Maps: street address extraction failed', formattedAddress)\n    return undefined\n  }\n\n  const streetAddress = streetAddressRegExResult[0].trim()\n\n  const zipCodeRegExResult = formattedAddress.match(/\\d{5}/)\n  if (!zipCodeRegExResult || !zipCodeRegExResult[0]) {\n    log.warn('Maps: zip code extraction failed', formattedAddress)\n    return undefined\n  }\n\n  const zipCode = zipCodeRegExResult[0]\n\n  const {lat, lng} = geometry.location\n\n  log.debug('Maps: geocode successful', streetAddress, zipCode, lat, lng)\n\n  return {\n    ...incident,\n    streetAddress,\n    zipCode,\n    lat,\n    lng\n  }\n}\n\nlet maps\n\nexport async function init () {\n  const env = envalid.cleanEnv(process.env, {\n    GOOGLE_MAPS_API_KEY: str({desc: 'Google maps node API key'})\n  })\n\n  const client = GoogleMaps.createClient({\n    key: env.GOOGLE_MAPS_API_KEY,\n    'rate.limit': 40,\n    timeout: 10000\n  })\n\n  googleGeocode = Promise.promisify(::client.geocode)\n\n  maps = Object.freeze({addLocationInfoToIncident})\n  log.verbose('Maps: initialized')\n}\n\nexport default () => maps\n\n\n\n// WEBPACK FOOTER //\n// ./src/maps.js","import envalid, {str} from 'envalid'\nimport {isEmpty} from 'lodash'\nimport moment from 'moment-timezone'\nimport makeDriver from 'request-x-ray'\nimport Xray from 'x-ray'\nimport log from './log'\n\nlet POLICE_INCIDENT_URL\n\nasync function scrape (date) {\n  const options = {\n    method: 'POST',\n    form: {\n      btnGo: 'Go',\n      RequestType: 'radbtnDetails',\n      ...getFormDateFields(date, date),\n      ...await getFormSecurityFields()\n    }\n  }\n\n  const xRay = Xray({\n    filters: {\n      parseDate,\n      parseAddress,\n      parseDescription,\n      trim\n    }\n  })\n  xRay.driver(makeDriver(options))\n\n  const selector = {\n    incidents: xRay('td.info', [{\n      reportedAt: `b:nth-of-type(1) | parseDate:${date.toISOString()}`,\n      streetAddress: 'b:nth-of-type(2) | parseAddress | trim',\n      offense: 'b:nth-of-type(3) | trim',\n      caseNumber: 'b:nth-of-type(4) | trim',\n      description: '@html | parseDescription | trim'\n    }])\n  }\n\n  let result\n  try {\n    result = await Promise.fromCallback(cb => xRay(POLICE_INCIDENT_URL, selector)(cb))\n  } catch (err) {\n    log.error('Scraper: error while fetching incidents', err)\n    throw err\n  }\n\n  if (!result || !result.incidents) {\n    log.error('Scraper: malformed scraper result', result)\n    throw new Error('Scraper: malformed scraper result')\n  }\n\n  const {incidents} = result\n  log.verbose(`Scraper: ${incidents.length} incidents scraped`)\n  log.debug('Scraped incidents', incidents)\n  return incidents\n}\n\nlet securityFields\nasync function getFormSecurityFields () {\n  if (securityFields) return securityFields\n\n  const selector = {\n    '__VIEWSTATE': 'input[name=\"__VIEWSTATE\"]@value',\n    '__VIEWSTATEGENERATOR': 'input[name=\"__VIEWSTATEGENERATOR\"]@value',\n    '__EVENTVALIDATION': 'input[name=\"__EVENTVALIDATION\"]@value'\n  }\n\n  const xRay = Xray()\n  try {\n    securityFields = await Promise.fromCallback(cb => xRay(POLICE_INCIDENT_URL, selector)(cb))\n  } catch (err) {\n    log.error('Scraper: error while fetching security fields', err)\n    throw err\n  }\n\n  if (!securityFields || isEmpty(securityFields)) {\n    log.error('Scraper: malformed security fields', securityFields)\n    throw new Error('Scraper: malformed security fields')\n  }\n  log.verbose('Scraper: obtained security fields')\n  return securityFields\n}\n\nconst getFormDateFields = (startMoment, endMoment) => {\n  return {\n    ddlFromMonth: startMoment.month() + 1,\n    ddlFromDate: startMoment.date(),\n    ddlFromYear: startMoment.year(),\n    ddlToMonth: endMoment.month() + 1,\n    ddlToDate: endMoment.date(),\n    ddlToYear: endMoment.year()\n  }\n}\n\nconst parseDate = (value, defaultDate) => {\n  if (!value) return defaultDate\n\n  return moment.tz(value, 'MMM DD YYYY hh:mmA', 'America/Los_Angeles').toISOString()\n}\n\nconst parseAddress = value => value.replace('BLK', '').replace(/\\s+/g, ' ')\n\nconst parseDescription = value => {\n  if (!value) return undefined\n\n  const re = /([^>]*)(<br>)?$/\n  const result = re.exec(value)\n  return result == null ? undefined : result[1].replace(/(\\s|\\\\n|\\\\r|\\\\t)+/g, ' ')\n}\n\nconst trim = value => value.trim()\n\nlet scraper\n\nexport async function init () {\n  const env = envalid.cleanEnv(process.env, {\n    POLICE_INCIDENT_URL: str({desc: 'Police daily activity URL'})\n  })\n\n  POLICE_INCIDENT_URL = env.POLICE_INCIDENT_URL\n  scraper = Object.freeze({\n    scrape\n  })\n  log.verbose('Scraper: initialized')\n}\n\nexport default () => scraper\n\n\n\n// WEBPACK FOOTER //\n// ./src/scraper.js","module.exports = require(\"bluebird\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird\"\n// module id = 7\n// module chunks = 0","/* global Promise:true */\nimport BluebirdPromise from 'bluebird'\nimport {padStart} from 'lodash'\nimport moment from 'moment-timezone'\nimport getDatabase, {init as initDb} from './database'\nimport log from './log'\nimport getMaps, {init as initMaps, QueryLimitExceeded} from './maps'\nimport getScraper, {init as initScraper} from './scraper'\n\nPromise = BluebirdPromise\n\nconst DATE_FORMAT = 'MM/DD/YYYY'\n\nasync function init () {\n  await initDb()\n  await initScraper()\n  await initMaps()\n}\n\nexport async function deleteAllIncidents () {\n  try {\n    log.info('Deleting all incidents from database')\n    await init()\n    await getDatabase().deleteAllIncidents()\n    await getDatabase().setConfigParam('lastImportedDate', moment.tz('12/31/1998', 'MM/DD/YYYY', 'America/Los_Angeles').toISOString())\n  } catch (err) {\n    log.error(err)\n  }\n}\n\nexport async function importIncidents () {\n  log.info('Police Daily Activity Importer run started...')\n  log.info('--------------------------------------------------------')\n  log.info('| Date       | Scraped | Imported | Duplicate | No Geo |')\n  log.info('--------------------------------------------------------')\n  await init()\n\n  const totalStats = {\n    startDay: undefined,\n    endDay: undefined,\n    scraped: 0,\n    imported: 0,\n    alreadyExists: 0,\n    noLocation: 0\n  }\n\n  try {\n    while (true) {\n      const lastImportDateStr = await getDatabase().getConfigParam('lastImportedDate')\n      const dateToImport = moment.tz(lastImportDateStr, 'America/Los_Angeles').add(1, 'days')\n\n      if (!dateToImport.isBefore(moment(), 'date')) {\n        break\n      }\n\n      if (typeof totalStats.startDay === 'undefined') {\n        totalStats.startDay = dateToImport\n      }\n      totalStats.endDay = dateToImport\n\n      const dayStats = {\n        scraped: 0,\n        imported: 0,\n        alreadyExists: 0,\n        noLocation: 0\n      }\n\n      try {\n        const scrapedIncidents = await getScraper().scrape(dateToImport)\n        dayStats.scraped = scrapedIncidents.length\n        for (const scrapedIncident of scrapedIncidents) {\n          if (await getDatabase().isIncidentUnsaved(scrapedIncident)) {\n            const incidentWithLocation = await getMaps().addLocationInfoToIncident(scrapedIncident)\n            if (incidentWithLocation !== undefined) {\n              await getDatabase().createIncident(incidentWithLocation)\n              dayStats.imported++\n            } else {\n              dayStats.noLocation++\n            }\n          } else {\n            dayStats.alreadyExists++\n          }\n        }\n        await getDatabase().setConfigParam('lastImportedDate', dateToImport.toISOString())\n      } finally {\n        log.info(`| ${padStart(dateToImport.format(DATE_FORMAT), 10)} | ${padStart(dayStats.scraped, 7)} | ${padStart(dayStats.imported, 8)} | ${padStart(dayStats.alreadyExists, 9)} | ${padStart(dayStats.noLocation, 6)} |`)\n        for (const prop in dayStats) {\n          totalStats[prop] += dayStats[prop]\n        }\n      }\n    }\n  } catch (err) {\n    if (err instanceof QueryLimitExceeded) {\n      log.warn('Google geocode quota exhausted. Exiting...')\n    } else {\n      log.error(err)\n    }\n  } finally {\n    log.info('--------------------------------------------------------')\n    log.info('Police Daily Activity Importer run finished...')\n    log.info('---------------------------------------------------------------------')\n    log.info('| Start Date | End Date   | Scraped | Imported | Duplicate | No Geo |')\n    log.info('---------------------------------------------------------------------')\n    log.info(`| ${padStart(totalStats.startDay.format(DATE_FORMAT), 10)} | ${padStart(totalStats.endDay.format(DATE_FORMAT), 10)} | ${padStart(totalStats.scraped, 7)} | ${padStart(totalStats.imported, 8)} | ${padStart(totalStats.alreadyExists, 9)} | ${padStart(totalStats.noLocation, 6)} |`)\n    log.info('---------------------------------------------------------------------')\n    await getDatabase().logImport(totalStats)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"@google/maps\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@google/maps\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"apollo-client\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-client\"\n// module id = 10\n// module chunks = 0","module.exports = require(\"es6-error\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"es6-error\"\n// module id = 11\n// module chunks = 0","module.exports = require(\"graphql-tag\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"graphql-tag\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"isomorphic-fetch\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"isomorphic-fetch\"\n// module id = 13\n// module chunks = 0","module.exports = require(\"request-x-ray\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"request-x-ray\"\n// module id = 14\n// module chunks = 0","module.exports = require(\"winston\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"winston\"\n// module id = 15\n// module chunks = 0","module.exports = require(\"winston-papertrail\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"winston-papertrail\"\n// module id = 16\n// module chunks = 0","module.exports = require(\"x-ray\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"x-ray\"\n// module id = 17\n// module chunks = 0"],"sourceRoot":""}